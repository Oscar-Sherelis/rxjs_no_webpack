{"id":"node_modules/rxjs/_esm5/internal/observable/dom/ajax.js","dependencies":[{"name":"C:\\Users\\Oskar\\Desktop\\poland tasks\\rxjs_test\\node_modules\\rxjs\\_esm5\\internal\\observable\\dom\\ajax.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Oskar\\Desktop\\poland tasks\\rxjs_test\\node_modules\\rxjs\\src\\internal\\observable\\dom\\ajax.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Oskar\\Desktop\\poland tasks\\rxjs_test\\package.json","includedInParent":true,"mtime":1585128987077},{"name":"C:\\Users\\Oskar\\Desktop\\poland tasks\\rxjs_test\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1585123687290},{"name":"./AjaxObservable","loc":{"line":2,"column":31},"parent":"C:\\Users\\Oskar\\Desktop\\poland tasks\\rxjs_test\\node_modules\\rxjs\\_esm5\\internal\\observable\\dom\\ajax.js","resolved":"C:\\Users\\Oskar\\Desktop\\poland tasks\\rxjs_test\\node_modules\\rxjs\\_esm5\\internal\\observable\\dom\\AjaxObservable.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ajax = void 0;\n\nvar _AjaxObservable = require(\"./AjaxObservable\");\n\n/** PURE_IMPORTS_START _AjaxObservable PURE_IMPORTS_END */\nvar ajax = /*@__PURE__*/function () {\n  return _AjaxObservable.AjaxObservable.create;\n}();\n\nexports.ajax = ajax;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/dom/ajax.ts","name":null,"original":{"line":82,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/observable/dom/ajax.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}}],"sources":{"../../../../src/internal/observable/dom/ajax.ts":"import {  AjaxObservable, AjaxCreationMethod  } from './AjaxObservable';\n/**\n * There is an ajax operator on the Rx object.\n *\n * It creates an observable for an Ajax request with either a request object with\n * url, headers, etc or a string for a URL.\n *\n *\n * ## Using ajax() to fetch the response object that is being returned from API.\n * ```ts\n * import { ajax } from 'rxjs/ajax';\n * import { map, catchError } from 'rxjs/operators';\n * import { of } from 'rxjs';\n *\n * const obs$ = ajax(`https://api.github.com/users?per_page=5`).pipe(\n *   map(userResponse => console.log('users: ', userResponse)),\n *   catchError(error => {\n *     console.log('error: ', error);\n *     return of(error);\n *   })\n * );\n *\n * ```\n *\n * ## Using ajax.getJSON() to fetch data from API.\n * ```ts\n * import { ajax } from 'rxjs/ajax';\n * import { map, catchError } from 'rxjs/operators';\n * import { of } from 'rxjs';\n *\n * const obs$ = ajax.getJSON(`https://api.github.com/users?per_page=5`).pipe(\n *   map(userResponse => console.log('users: ', userResponse)),\n *   catchError(error => {\n *     console.log('error: ', error);\n *     return of(error);\n *   })\n * );\n *\n * ```\n *\n * ## Using ajax() with object as argument and method POST with a two seconds delay.\n * ```ts\n * import { ajax } from 'rxjs/ajax';\n * import { of } from 'rxjs';\n *\n * const users = ajax({\n *   url: 'https://httpbin.org/delay/2',\n *   method: 'POST',\n *   headers: {\n *     'Content-Type': 'application/json',\n *     'rxjs-custom-header': 'Rxjs'\n *   },\n *   body: {\n *     rxjs: 'Hello World!'\n *   }\n * }).pipe(\n *   map(response => console.log('response: ', response)),\n *   catchError(error => {\n *     console.log('error: ', error);\n *     return of(error);\n *   })\n * );\n *\n * ```\n *\n * ## Using ajax() to fetch. An error object that is being returned from the request.\n * ```ts\n * import { ajax } from 'rxjs/ajax';\n * import { map, catchError } from 'rxjs/operators';\n * import { of } from 'rxjs';\n *\n * const obs$ = ajax(`https://api.github.com/404`).pipe(\n *   map(userResponse => console.log('users: ', userResponse)),\n *   catchError(error => {\n *     console.log('error: ', error);\n *     return of(error);\n *   })\n * );\n *\n * ```\n */\nexport const ajax: AjaxCreationMethod = (() => AjaxObservable.create)();\n"},"lineCount":null}},"error":null,"hash":"4ad6f241ef6b9547408ecd4fdc285beb","cacheData":{"env":{}}}